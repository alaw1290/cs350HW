package hw3;

import java.util.*;


public class MM1Simulator {
	public double lambda;
	public double serviceRate;
	public double simulationLength;
	public double currentTime;
	public int w;
	public int q;
	public Request server;
	public LinkedList<Request> queue;
	public Logger logger;
	
	
	public MM1Simulator(double lamb, double sr, double simlen){
		lambda = lamb;
		serviceRate = sr;
		simulationLength = simlen * 2;
		server = null;
		queue = new LinkedList<Request>();
		
	}
	
	public double[] runMM1(){
		currentTime = 0;
		Scheduler scheduler = new Scheduler(lambda,serviceRate, 2);
		logger = new Logger();
		while(currentTime < simulationLength){
			Event currentEvent = scheduler.nextEvent(currentTime);
			currentTime = currentEvent.time;
			
			
			if(currentEvent.type == 0){
				// Birth Event
				q++;
				Request request = new Request(currentTime);
				if(server == null){
					server = request;
					server.serviceStart(currentTime);
				}
				else{
					w++;
					queue.add(request);
				}
			}

			else if(currentEvent.type == 1){
				// Death Event
				if(server != null){
					q--;
					server.finished(currentTime);
					
					if(currentTime > (simulationLength/2)){
						System.out.println(server.waitingLog());
						System.out.println(server.serviceLog());
						logger.logRequest(server.waitingLog(), server.serviceLog());
						
					}
					
					
					if(queue.peek() != null){
						w--;
						server = queue.getFirst();
					}
					else{
						server = null;
					}
				}
			}

			else{
				// Log Event (only start after current time is past halfway point)
				if(currentTime > (simulationLength/2)){
					if(server == null){
						logger.writeLog(w, q, 0);
					}
					else{
						logger.writeLog(w, q, 1);
					}
				}
				
			}			
		}
		
	//completed simulation, return results
	return logger.logResult();
	}
	
	public static void main(String args[]){
//		Scanner reader = new Scanner(System.in); 
//		System.out.println("Enter in arrival rate:");
//		double lamb = reader.nextDouble(); 
//		System.out.println("Enter in average service time:");
//		double ts = reader.nextDouble(); 
//		System.out.println("Enter in simulation time (logging only begins halfway):");
//		double simlen = reader.nextDouble(); 
//
//		MM1Simulator Sim = new MM1Simulator(lamb, (1/ts), simlen);
//		System.out.println("Beginning MM1 Simulation...");
		
		System.out.println("Beginning MM1 Simulation...");
		MM1Simulator Sim = new MM1Simulator(5, (1/.15), 1000);
		
		double[] results = Sim.runMM1();
		
		//{tw,ts,w,q,p}
		System.out.format("Results:\n "
				+ "Average Wait Time: %f\n "
				+ "Average Service Time: %f\n "
				+ "Average # in Queue: %f\n "
				+ "Average # in System: %f\n "
				+ "Utilization: %f",
				results[0],results[1],results[2],results[3],results[4]); 
		
	}
}



